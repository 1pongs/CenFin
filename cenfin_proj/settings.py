"""
Django settings for cenfin_proj project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import sys
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

BASE_CURRENCY = "PHP"

# Detect when running tests. Be robust to different invocations (pytest, manage.py test).
# This ensures the test DB uses SQLite and test-specific flags are applied.
TESTING = (
    any(arg in ("pytest", "test") for arg in sys.argv)
    or any("pytest" in arg for arg in sys.argv)
)

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "core.context_processors.display_currency",
                "currencies.context_processors.currency_context",
            ],
        },
    },
]


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-vw*3$wvq*_itmoh2agb=gf$vkpcztm^!3rml^c*n+5w8qn4(3x"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Additionally, block corrections when the entity's liquid balance would go
# negative (stricter than account-only rules). When enabled, a correction that
# would push the entity negative is rejected even if the specific account would
# remain non-negative, unless entity cover is separately allowed and sufficient.
BLOCK_ENTITY_NEGATIVE_ON_CORRECTION = True

# Enforce entity-level non-negative rule on deletes as well. Preserve tests'
# expectations by disabling this stricter rule when running tests (compute inline
# because TESTING is declared later in this file).
BLOCK_ENTITY_NEGATIVE_ON_DELETE = not TESTING

# When correcting a transaction that inflows into an entity on a given account,
# require at least the minimum amount that keeps that entity+account "pocket"
# non-negative across currently saved future transactions. Shows a friendly
# error with the exact minimum when under the threshold. This narrows scope and
# matches the "Atomic correction + cover" scenario described by the user.
ATOMIC_CORRECTION_MINIMUM_ON_POCKET = not TESTING


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "crispy_forms",
    "crispy_bootstrap5",
    "django.contrib.humanize",
    # custom apps
    "dashboard",
    "transactions",
    "accounts",
    "entities",
    "currencies",
    "acquisitions.apps.AcquisitionsConfig",
    "liabilities",
    "users",
]
CRISPY_ALLOWED_TEMPLATE_PACKS = {"bootstrap5"}
CRISPY_TEMPLATE_PACK = "bootstrap5"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "core.middleware.NoStoreCacheMiddleware",
    "core.middleware.DisplayCurrencyMiddleware",
    "users.access.LoginRequiredMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "cenfin_proj.urls"

WSGI_APPLICATION = "cenfin_proj.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

if TESTING:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": ":memory:",
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": "cenfin_db",
            "USER": "root",
            "PASSWORD": "mangaawit",
            "HOST": "localhost",
            "PORT": "3306",
            "OPTIONS": {"init_command": "SET sql_mode='STRICT_TRANS_TABLES'"},
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"

STATICFILES_DIRS = [
    BASE_DIR / "cenfin_proj" / "static",
]

STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Use custom user model
AUTH_USER_MODEL = "users.User"

# Authentication
LOGIN_REDIRECT_URL = "dashboard:dashboard"
LOGIN_URL = "users:login"
LOGOUT_REDIRECT_URL = "users:login"
